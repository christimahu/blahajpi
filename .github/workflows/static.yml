# .github/workflows/static.yml
name: Deploy Documentation and Website

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build documentation job
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install documentation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz
          pip install mkdocs mkdocs-material
      
      - name: Create necessary directories
        run: |
          mkdir -p docs/doxygen/html
          mkdir -p web/docs
      
      - name: Generate API documentation
        run: |
          # Check if Doxyfile exists, if not create it
          if [ ! -f "Doxyfile" ]; then
            echo "Creating default Doxyfile"
            doxygen -g
            echo "PROJECT_NAME = \"Blahaj PI\"" >> Doxyfile
            echo "PROJECT_BRIEF = \"Your friendly shark detective keeping social waters safe\"" >> Doxyfile
            echo "OUTPUT_DIRECTORY = docs/doxygen" >> Doxyfile
            echo "INPUT = lib/include lib/src cli/include cli/src" >> Doxyfile
            echo "RECURSIVE = YES" >> Doxyfile
            echo "EXTRACT_ALL = YES" >> Doxyfile
            echo "GENERATE_HTML = YES" >> Doxyfile
            echo "HTML_OUTPUT = html" >> Doxyfile
            echo "GENERATE_LATEX = NO" >> Doxyfile
          fi
          doxygen
          
      - name: Copy Doxygen output
        run: |
          if [ -d "docs/doxygen/html" ]; then
            cp -r docs/doxygen/html/* web/docs/
            echo "Doxygen output copied to web/docs"
          else
            echo "Warning: Doxygen output not found at docs/doxygen/html"
          fi
          
      - name: Build MkDocs documentation
        run: |
          # Create basic docs if they don't exist
          mkdir -p docs/user-guide docs/developer-guide
          if [ ! -f "docs/mkdocs.yml" ]; then
            echo "Creating basic MkDocs configuration"
            echo "site_name: Blahaj PI" > docs/mkdocs.yml
            echo "theme: readthedocs" >> docs/mkdocs.yml
            
            # Create a minimal index if it doesn't exist
            if [ ! -f "docs/index.md" ]; then
              echo "# Blahaj PI" > docs/index.md
              echo "Your friendly shark detective keeping social waters safe." >> docs/index.md
            fi
          fi
          
          # Build MkDocs directly to web/docs (will override Doxygen content)
          mkdocs build -f docs/mkdocs.yml -d web/docs || echo "MkDocs build failed, continuing anyway"
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'web'

  # Deployment job
  deploy:
    needs: build-docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
